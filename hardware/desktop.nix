# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:
{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
<<<<<<< HEAD
<<<<<<< HEAD
    "evdev"
=======
>>>>>>> e1d11bc (cleaned up config)
=======
    "evdev"
>>>>>>> 6f9a7b7 (updated lockfile fixed rofi)
    "usb_storage"
    "usbhid"
    "sd_mod"
    "sr_mod"
  ];
<<<<<<< HEAD
<<<<<<< HEAD
  boot.initrd.systemd.enable = true;
=======
>>>>>>> e1d11bc (cleaned up config)
=======
  boot.initrd.systemd.enable = true;
>>>>>>> 6f9a7b7 (updated lockfile fixed rofi)
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    #    device = "/dev/disk/by-uuid/0120f833-c80f-4b8d-b175-32661f3b9386";
    device = "/dev/disk/by-uuid/06957a11-5d26-4f11-a461-75099a5dd091";
    fsType = "btrfs";
    options = [
      "subvol=root"
      "compress=zstd"
<<<<<<< HEAD
<<<<<<< HEAD
      "ssd"
=======
>>>>>>> e1d11bc (cleaned up config)
=======
      "ssd"
>>>>>>> 6f9a7b7 (updated lockfile fixed rofi)
    ];
  };
  fileSystems."/home" = {
    #    device = "/dev/disk/by-uuid/0120f833-c80f-4b8d-b175-32661f3b9386";
<<<<<<< HEAD
<<<<<<< HEAD
    device = "/dev/disk/by-uuid/9c06e0e5-2b05-4ab8-b6e3-dc19c21e0baa";
=======
    device = "/dev/disk/by-uuid/06957a11-5d26-4f11-a461-75099a5dd091";
>>>>>>> e1d11bc (cleaned up config)
=======
    device = "/dev/disk/by-uuid/9c06e0e5-2b05-4ab8-b6e3-dc19c21e0baa";
>>>>>>> 6f9a7b7 (updated lockfile fixed rofi)
    fsType = "btrfs";
    options = [
      "subvol=home"
      "compress=zstd"
<<<<<<< HEAD
<<<<<<< HEAD
      "ssd"
=======
>>>>>>> e1d11bc (cleaned up config)
=======
      "ssd"
>>>>>>> 6f9a7b7 (updated lockfile fixed rofi)
    ];
  };
  fileSystems."/nix" = {
    #    device = "/dev/disk/by-uuid/0120f833-c80f-4b8d-b175-32661f3b9386";
    device = "/dev/disk/by-uuid/06957a11-5d26-4f11-a461-75099a5dd091";
    fsType = "btrfs";
    options = [
      "subvol=nix"
      "compress=zstd"
<<<<<<< HEAD
<<<<<<< HEAD
      "ssd"
=======
>>>>>>> e1d11bc (cleaned up config)
=======
      "ssd"
>>>>>>> 6f9a7b7 (updated lockfile fixed rofi)
      "noatime"
    ];
  };
  fileSystems."/boot" = {
    #    device = "/dev/disk/by-uuid/DEFD-AB86";
    device = "/dev/disk/by-uuid/70E9-C9C5";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "performance";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
